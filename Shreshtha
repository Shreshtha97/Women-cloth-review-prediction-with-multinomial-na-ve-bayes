import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report

# Step 1: Load the dataset
data = pd.read_csv("women_clothing_reviews.csv")

# Step 2: Data Preprocessing
# Assuming 'review_text' contains the review text and 'rating' contains the rating
X = data['review_text']
y = data['rating']

# Step 3: Feature Engineering
vectorizer = CountVectorizer()
X_vectorized = vectorizer.fit_transform(X)

# Step 4: Train-test Split
X_train, X_test, y_train, y_test = train_test_split(X_vectorized, y, test_size=0.2, random_state=42)

# Step 5: Model Training
nb_model = MultinomialNB()
nb_model.fit(X_train, y_train)

# Step 6: Model Evaluation
y_pred = nb_model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
print("Classification Report:")
print(classification_report(y_test, y_pred))

# Step 7: Deployment (if satisfied with the model's performance)
# Now you can use the trained model to predict ratings for new clothing reviews
